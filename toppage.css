/*
ナビゲーションバーはオーバーフローしたら縦にスクロールさせる
しない場合でも縦いっぱいにひきのばしておく 
開閉ボタンはナビゲーションが持つ要素の中心を縦の座標にしたい
右端のグリッドを縦いっぱい、それより小さい中身の要素があって
その中身の要素を基準にボタンを決定するので別グリッドにボタンがあると面倒
でも同じグリッドにいると0にした時にボタンも消えるのがわりと問題
sandboxでためしながら最終的に改善する

flexで外にだすとかは検討するが、0にして消せた方が計算量が小さくなりそう


なんかulがcolumnを0にしても消えない
最悪の場合flexboxをつかった方法もかんがえよう

*/

body {
	display: grid;
	grid-template-rows: 4em 1fr 1em;
	margin: 0;

	overflow-x: hidden;

	color: #131313;
	background: #131313;
}


/* ヘッダはシンプルに 記述はほとんどこれで完成している */
/* 微調整は最後にやる */
header {
	/* heigh: 4em; はgridで指定しているのでここで不要*/
	background: #262626;
	color: #ababab;
	text-align: center;
	position: sticky;
	top: 0;

	& h1 {
		margin: 0;
		/ *border-bottom: solid 1px white; */
	}

	& p {
		margin: 0;
	}
}

/* フッタの情報もすくない 量的にも1行なので記述はほぼ不要 */
footer {
	text-align: center;
}



/* ボタンの設定とみための調整 */
input[type=checkbox] {
	display: none;
}

input[type=checkbox]:checked ~ .main-wrapper {
	grid-template-columns: 1fr 30px 10em;

	/*
	& .button {
		transform: rotate(180deg);
	}
	*/
	/*  こっちで挙動をおきかえたい orderでいれかえられるとうれしい*/

	& .icon-tri {
		clip-path: polygon(2% 0, 0 2%, 96% 50%, 0 98%, 2% 100%, 100% 50%, 2% 0);
		/* clip-path: polygon(100% 50%, 50% 100%, 48% 98%, 96% 50%, 48% 2%, 50% 0, 100% 50%); */
	}

	& .icon-line {
		transform: translateX(-30px);
	}


	& nav {
		opacity: 1;
	}

	transition: all 0.5s;
}



/* ここではボタンレイアウトを設定する */
.button-wrapper {
	display: grid;
	place-content: center;

	& label { 
		/* border: solid 1px red; */
		display: grid;
		width: 30px;	/* main-wrapperの中央のグリッドにあわせればよい */
		aspect-ratio: 0.5; /* 縦長にする */
		grid-template-columns: 1fr 1px;   /* 2columns 3rowsなgridにする */
		grid-template-rows: 1fr 2fr 1fr;  /* サイズ50%で中央寄せ */
		/* ボタンレイアウトは暫定  あとからちゃんとやる */
		/* 適当な言語で算出してハードコードしてしまうのが楽そう 関数にもできて早い */

		& .icon-tri {
			grid-column: 1; /* 左側 */
			grid-row: 2;	/* 中央へ */

			background: #009f9e;
			width: 29px;
			aspect-ratio: 1;
			clip-path: polygon(98% 0, 100% 2%, 4% 50%, 100% 98%, 98% 100%, 0 50%, 98% 0);

			transition: all 0.5s;
		}

		& .icon-line {
			grid-column: 2;
			grid-row: 1 / -1;

			background: #009f9e;
			transition: all 0.5s;
		}
	}
}




/* 記事一覧とツールバーのコンテナ */
/* 横並びで開閉するので必要 */
/* ここでは位置や大きさなどレイアウトを調整する*/
.main-wrapper {
	display: grid;
	grid-template-columns: 1fr 30px 0;
	margin-top: 15px;

	& main {
		grid-column: 1 / 3;
		grid-row: 1;
	}
	& .button-wrapper {
		z-index: 99;
		grid-column: 2;
		grid-row: 1;
	}

	& nav {
		color: #ababab;

		grid-column: 3;
		opacity: 1;
		transition: all 0.5s;
	}

	/* main-wrapper直下のボタン(コンテナ)とナビゲーションは同じ設定にする */
	& .button-wrapper, nav {
		position: sticky;
		top: 4em;
		bottom: 0;
		height: min(calc(100vh - 4em), calc(100vh - 6em));
		/* border: solid 1px blue; */
	}

	/* これボタンの挙動のほうに書く必要ない？ */
	transition: all 0.5s;
}


/* タグ部分のレイアウト ほぼ完成 */
.tags ul {
	margin-left: 0;
	padding-left: 1em;
	list-style-type: "";
	& a {
		display: block;
		border-left: solid 1px #009f9e;
		padding: 0.5rem 1rem;
		text-decoration: none;
	}

	& a:hover {
		color: #00ff00;
	}
}








/* 記事一覧: 縦に並べる いずれ2 rowまでのフレキシブルも検討 */
.articles {
	/* border: solid 1px #ff0000; */
	display: grid;
	grid-template-columns: 1fr 2fr 1fr;
	place-content: start;
	gap: 1em;


	/* 各記事: gridで扱う 必要な情報が出ればその時に拡張 */
	& article {
		grid-column: 2;
		display: grid;
		place-items: center;
		background: #696969;
		gap: 0;

		position: relative;

		& h2 {
			padding-left: 0.5em;
			padding-right: 0.5em;
			max-width: 60%;

			border-left: solid 2px #009f9e;
			border-bottom: solid 1px #009f9e;
			/* border-color: #009f9e; */

			overflow: hidden;
			white-space: nowrap;
			text-overflow: ellipsis;
		}

		& p {
			margin-top: 0;
			text-align: center;
			max-width: 60%;
			word-break: break-word;
		}

		& a {
			position: absolute;
			top: 0;
			left: 0;
			height: 100%;
			width: 100%;
		}
		/* マウスホバーで色をかえてみやすくする */
		/* aより文字が上にあるので、文字の上にマウスがきたときに挙動が変 */
		& a:hover {
			background: #434343;
		}

		/* 文字をリンクより上にもってくる */
		& h2, p { z-index: 99; }

		> * { /* グリッドの範囲を表示する */
			/* border:solid 1px red; */
		}
	}
}




